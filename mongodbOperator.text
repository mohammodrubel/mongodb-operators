$eq, $neq, $gt, $lt, $gte, $lte , $ne ,$and, $or, 

এখন আমরা দেখবো => $eq,


যদি আমরা ইকুয়াল দেখতে চাই , যেমন আমার একটা এরে আছে যেসন ডেমোর মতো এখন আমি দেখতে চাই gender === "Male" যদি হয় তাহলে আমাকে ডাটা গুলি দাও ।
এখন আমরা ইকুয়াল অপারেটর ব্যাবহার করতে পারি  যেমন ।

db.test.find({gender:{$eq: "Male"}})
db.test.find({age:{$eq: 30}})




এখন আমরা দেখবো => $ne, 

আমাদের পুরো এরে তে ধরে নিলাম ১০০ টা ডাটা আছে যেখানে আমরা চেক করবো যে টা ইকুয়াল না  যেমন আমরা ধরে নিলাম এজ ১২ যদি থাকে তা বাদে বাকি ভেলু গুলি আমার লাগবে তাহলে 
db.test.find({age:{$ne: 12}})

জেতেতু আমাদের ভেলু আছে ৯৯ টা ১২ আছে ২ টা সেহেতু আমরা ভেলু পাবো ৯৭ টা 





এখন আমরা দেখবো => $gt,

আমাদের এরে তে যদি ৩০ এর উপরে এজ থাকে সেগুলি যদি আমাদের দরকার হয় তাহলে আমরা ব্যাবহার করতে পারি $gt তাহলে পুরো এরে তে আমরা ৩০ এর উপরের ভেলু গুলি পাবো 
যেমন 
db.test.find({age:{$gt: 30}})





এখন আমরা দেখবো => $gte,

আমাদের [] যতো ভেলু আছে তার মদ্ধে ৩০ থেকে এবং ৩০ এর উপরে যতো ভেলু আছে তা যদি আমরা পেতে চাই তাহলে আমরা ব্যাবহার করবো $gte
db.test.find({age:{$gte:30}})
ধরে নিলাম আমাদের এরে তে ৩০ এর উপরে ভেলু আছে ৪০ টা আর ৩০ একটা ভেলু আছে তাহলে আমরা এই মেথড ইউজ করলে পাবো ৪১ টা কারন আমরা বলেছি ৩০ এবং ৩০ এর উপরে ভেলু । 


এখন আমরা দেখবো => $lte,

আমাদের [] যতো ভেলু আছে তার মদ্ধে ৩০ থেকে এবং ৩০ এর নিচে যতো ভেলু আছে তা যদি আমরা পেতে চাই তাহলে আমরা ব্যাবহার করবো $lte
db.test.find({age:{$lte:30}})
 এইটা ব্যাবহার করলে আমরা ৩০ এবং ৩০ এর নিচের ভেলু গুলি পাবো বাট ৩০এর উপরের ভেলু গুলি পাবো না 




এখন আমরা দেখবো => $in,

আমাদের কালেকশনে অনেক গুলি ভেলু আছে সেই ভেলু গুলির মদ্ধে আমার পাঠানো ভেলু ডলার ইন সব গুলি কুয়েরি করে জে ভেলু গুলি মিলবে সে ভেলু গুলি এনে দিবে লাইক ফিল্টারের মতো কাজ করবে 




এখন আমরা দেখবো => $lt $gt,

যদি আমরা চাই ৪৫ থেকে ৫০ এর মদ্ধে ডাটা গুলি দিতে তাহলে আমরা যা করতে পারি তা হলো 
db.test.find({age:{$gt:45, $lt:50}},{age:1})
যদি আমরা গেটারদেন ঈকুয়াল চাই তাহলে 
db.test.find({age:{$gte:45, $lte:50}},{age:1})
যদি আমরা দুই এর অধিক ফিল্ডের উপরে এমন কন্ডিশন দিতে চাই তাহলে 
db.test.find({gender:"Male", age:{$gte:45, $lte:50}},{age:1,gender:1}).sort({age:-1})
যদি আমরা স্পেসিফিক ভাবে বলে দিতে চাই জে আমার এই বয়সের শুধু মেয়েদের বয়স অনুযায়ী ফিল্টার করে দিতে হবে তাহলে 
db.test.find({gender:"Female", age:{$in:[20,22,24,56,41,43]}},{age:1,gender:1})
আর যদি আমরা বলে দেই স্পেসিফিক ভাবে এইগুলি বাদ দিয়ে বাকি গুলি দিতে তাহলে আমাদের অপারেটর নিন ইউজ করতে হবে যেমন 
db.test.find({gender:"Female", age:{$nin:[20,22,24,56,41,43]}},{age:1,gender:1})
এবং যদি আমরা আরেকটু কন্ডিশন দেই হয় আমার ইন্টারেস্ট এ এইটা পারতে হবে নাহলে অই টা পারতে হবে সেক্ষেত্রে আমাদের অপারেটর ইউজ করতে হবে এমন 
db.test.find({gender:"Male",interests:{$in:["Cooking","Reading"]}, age:{$nin:[20,22,24,56,41,43]}},{age:1,gender:1,interests:1})


এখন আমরা দেখবো  $and, $or,$and $ne $lte implicit vs explicit


যদি আমরা ১৫ থেকে ৩০ চাই তাহলে আমরা এইভাবে দেখতে পারি 
db.test.find({age:{$ne:15 ,$lte:30}})

এখানে সব গুলি কন্ডিশন সত্যি হতে হবে 
db.test.find({
    $and:
    [
       {age:{$ne:15}},
       {age:{$lte:30}},
       {gender:"Female"}
    ]
}).project({age:1,gender:1}).sort({age:1})

এখানে সব গুলি কন্ডিশন সত্যি না হলেও চলবে 
db.test.find({
    $or:
    [
       {age:{$ne:15}},
       {age:{$lte:30}},
       {gender:"Female"}
    ]
}).project({age:1,gender:1}).sort({age:1})





$exists, $type,$size
যদি আমার নেইম, ইমেইল ,ফোন নাম্বার এমন কিছু খুজি তাহলে আমরা এক্সিস্ট ব্যাবহার করতে পারি যেমন 
অথবা যদি সবার মাঝে সেলারি ফিল্ড থাকে থাওলেই দেখাবে আর নাহলে দেখাবেনা 

db.test.find({salary:{$exists: true}})


ধরে নিলাম আমাদের বয়স এর ফিল্ড টা নাম্বার আছে আমরা ইচ্ছা করেই সকল এজ এর ভেলু কে নাম্বার বা স্ট্রিং এ রুপান্তর করতে পারবো 
db.test.find({age:{$type: "number"}})
db.test.find({age:{$type: "string"}})

কোনো একটা ফিল্ড খালি আছে নাকি দেখতে আমরা ইউজ করতে পারি সাইজ যেমন 
আমরা চাচ্ছি আমার ফ্রেন্ড এর array থেকে [] মদ্ধে পাচ টা ইন্ডেক্স এর কোনো ফ্রেন্ড আছে নাকি তাহলে 
db.test.find({friends:{$size: 5}},{friends:1})
এবং চাচ্ছি [] আরে থেকে  ০ ইন্ডেক্স এর কোনো ফ্রেন্ড আছে নাকি 
db.test.find({friends:{$size: 1}},{friends:1})
অথবা এইভাবে টাইপ চেক এর মাদ্ধমে করতে পারি 
db.test.find({company:{$type:"null"}}).project({company:1})





এখন আমরা শিখবো  $all , $elemMatch ৫.৭ 
যদি আমরা একটা এরে থেকে ২ টা ভেলু অথবা জে কয়টা ভেলু লাগে তা পুরা কালেকশন থেকে খুজতে চাই তাহলে আমরা এইভাবে কুয়েরি লিখতে পারি 
db.test.find({friends:{$all:[ "Abdur Rakib","Jhankar Mahbub" ]}}).project({friends:1})

যদি আমরা মেইন এরে থেকে একটা অবজেক্ট স্কিল পাই তাহলে আমরা অই অবজেক্ট থেকে যদি দুই তিন টা ফিল্ড ম্যাচ করাতে চাই তাহলে আমরা এইভাবে কুয়েরি করতে পারি 
db.test.find({skills:{
    $elemMatch: {name : "RUBY",level:"Expert",isLearning:true}
}})





$set, $addToSet, $push,
কোনো কিছু আপডেট করতে গেলে আমরা সেট ইউজ করবো 
প্রথমে আমাদের ইউনিক আইডি দিয়ে ম্যাচ করাতে হবে 
তারপরে কি আপডেট করবো তা দিতে হবে 

db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000065")},{$set:{age:21}})

যদি আমরা একটা এরে তে আপডেট করে নতুন ভেলু এড করতে চাই তাহলে আমাদের অপারেটর চেঞ্জ করে দিতে হবে যেমন 
db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000065")},{$addToSet:{friends: "Md Rubel"}})
এর মাদ্ধমে এরে তে md rubel এড হয়ে গেছে 
যদি আমরা একটা এরে থেকে একের অধিক ডাটা এড করতে চাই একটা এরে তে তাহলে আমরা ব্যাবহার করবো এইভাবে 
db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000065")},{$addToSet:{interests: {$each: ["ru","be"]}}})
যদি আমরা এরের একই ডাটা আবার রাখতে চাই তখন আমাদের $push ব্যাবহার করতে হবে 
db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000065")},{$push:{interests: {$each: ["ru","be"]}}})


 $unset, $pop, $pull, $pullAll
 যদি আমরা কোনো একটা ফিল্ড ডিলেট করতে চাই তাহলে আমাদের অপারেটর টা হবে এমন 
 db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000065")},{$unset: {age: "" }})
 একটা এরে থেকে লাস্ট এর ইলিমেন্ট টা বাদ দিতে চাইলে আমাদের পপ করতে হবে যেমন 
 db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000066")},{$pop: {friends:1}}) মাইনাস ওয়ান দিলে এরের প্রথম থেকে রিমুভ হয়ে যাবে 
 যদি আমরা একটা এরে থেকে সব গুলি ভেলু পুল করতে চাই বা রিমুভ করতে চাই তাহলে আমাদের কুয়েরি হবে এমন 
 db.test.updateOne({_id:ObjectId("6406ad63fc13ae5a40000066")},{$pullAll: {friends:[ "Tanmoy Parvez", "Mir Hussain" ]}})




 যদি আমরা একটা অবজেক্ট এর মাল্টি ফিল আপডেট করতে চাই তাহলে আমাদের কুয়েরি টা হবে এমন 
 db.test.updateOne(
    {_id:ObjectId("6406ad63fc13ae5a40000066")},
    {$set:{"address.city":"dhaka gulshan Dhaka","address.postalCode":"1214","address.country":"bangladesh"}}
    )

যখন আমরা একটা এরের অবজেক্ট এর ভিতরে অবজেক্ট চেঞ্জ করতে চাই তখন আমরা যেভাবে চেঞ্জ করতে পারি বা আপডেট করতে পারি 
db.test.updateOne(
    {_id:ObjectId("6406ad63fc13ae5a40000065"),"education.major":"Art"},
    {$set:{"education.$.major":"bangla"}}
    )
